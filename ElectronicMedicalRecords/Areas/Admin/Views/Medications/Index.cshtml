@model IEnumerable<ElectronicMedicalRecords.Models.Medication>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
<header class="mb-3">
    <a href="#" class="burger-btn d-block d-xl-none">
        <i class="bi bi-justify fs-3"></i>
    </a>
</header>

<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last pdlLeft">
                <h3>Quản lý thuốc</h3>
                <p class="text-subtitle text-muted">Danh sách thuốc trên hệ thống</p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first abs-t-r">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Medications")">Danh Sách</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Thuốc</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card">
            <div class="card-header">
                Danh sách thuốc
                @if (User.IsInRole("Giám Đốc") || User.IsInRole("QTV"))
                {
                    <br />
                    <button style="margin-top: 10px" type="button" class="btn btn-outline-primary block" data-bs-toggle="modal"
                            data-bs-target="#createMedicationModal">
                        <i class="m-icon bi bi-plus-circle"></i>
                        Thêm Thuốc
                    </button>
                }
                </div>
            <div class="card-body">
                <table class="table table-striped" id="tableMedication" style="width:100%">
                    <thead>
                        <tr>
                            <th>Tên Thuốc</th>
                            <th>Tên Hoạt Chất</th>
                            <th>Đơn Vị</th>
                            <th>Giá</th>
                            @if (User.IsInRole("Giám Đốc") || User.IsInRole("QTV"))
                            {
                                <th>Chức Năng</th>
                            }
                            </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </section>
</div>
<!-- Create Basic Modal -->
<div class="modal fade text-left" id="createMedicationModal" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-700" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel1">Thêm Thuốc</h5>
                <button type="button" class="close rounded-pill"
                        data-bs-dismiss="modal" aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-createMedication" class="form form-horizontal needs-validation" novalidate>
                    <div class="form-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label>Tên Thuốc</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <input name="Name" type="text" class="form-control pd-form"
                                               placeholder="Tên Thuốc" id="first-name-icon MedicationNameCreate" required>
                                        <div class="form-control-icon icon-Medication">
                                            <i class="bi bi-person"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label>Tên Hoạt Chất</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <select name="MedicationCategory_ID" id="MedicationCategory_ID" class="choices form-select" required>
                                            <option value="">Vui Lòng Chọn Hoạt Chất</option>
                                            @foreach (var item in ViewBag.NameHC)
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <label>Đơn Vị Tính</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <select name="Unit" class="choices form-select" id="UnitCreateMedication" required>
                                            <option value="" placeholder>Vui Lòng Chọn Đơn Vị</option>
                                            <option value="Lọ">Lọ</option>
                                            <option value="Viên">Viên</option>
                                            <option value="Chai">Chai</option>
                                            <option value="Gói">Gói</option>
                                            <option value="Bình">Bình</option>
                                            <option value="Ống">Ống</option>
                                            <option value="TUBE">TUBE</option>
                                            <option value="Viên/Sủi">Viên/Sủi</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label>Giá</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <input name="Price" type="number" class="form-control pd-form"
                                               placeholder="Giá" required min="0">
                                        <div class="form-control-icon icon-Medication">
                                            <i class="bi bi-lock"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn" data-bs-dismiss="modal">
                            <i class="bx bx-x d-block d-sm-none"></i>
                            <span class="d-none d-sm-block">Hủy</span>
                        </button>
                        <button type="submit" id="createMedication" class="btn btn-primary ml-1">
                            <i class="bx bx-check d-block d-sm-none"></i>
                            <span class="d-none d-sm-block">Tạo</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Update Basic Modal -->
<div class="modal fade text-left" id="Updatemedication" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-700" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Cập nhật thuốc</h5>
                <button type="button" class="close rounded-pill"
                        data-bs-dismiss="modal" aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-updateMedication" class="form form-horizontal">
                    <div class="form-body">
                        <div class="row">
                            <input type="text" id="UpdateMedicationID" name="ID" hidden />
                            <div class="col-md-4">
                                <label for="MedicationName">Tên Thuốc</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <input name="Name" type="text" class="form-control"
                                               placeholder="Tên" id="UpdateMedicationName" required>
                                        <div class="form-control-icon">
                                            <i class="bi bi-envelope"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="UpdateMedicationCategory_ID">Tên Hoạt Chất</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <select id="UpdateMedicationCategory_ID" name="MedicationCategory_ID" class="choices form-select">
                                            @foreach (var item in ViewBag.NameHC)
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        </select>
                                        @Html.ValidationMessage("Medications", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="MedicationUnit">ĐVT</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <select name="Unit" id="UpdateMedicationUnit" class="choices form-select">
                                            <option value="Lọ">Lọ</option>
                                            <option value="Viên">Viên</option>
                                            <option value="Chai">Chai</option>
                                            <option value="Gói">Gói</option>
                                            <option value="Bình">Bình</option>
                                            <option value="Ống">Ống</option>
                                            <option value="TUBE">TUBE</option>
                                            <option value="Viên/Sủi">Viên/Sủi</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="MedicationPrice">Giá</label>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group has-icon-left">
                                    <div class="position-relative">
                                        <input name="Price" type="number" class="form-control"
                                               placeholder="Giá" id="UpdateMedicationPrice" required min="0">
                                        <div class="form-control-icon">
                                            <i class="bi bi-lock"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn" data-bs-dismiss="modal">
                                <i class="bx bx-x d-block d-sm-none"></i>
                                <span class="d-none d-sm-block">Hủy</span>
                            </button>
                            <button type="submit" id="updateMedication" class="btn btn-primary ml-1">
                                <i class="bx bx-check d-block d-sm-none"></i>
                                <span class="d-none d-sm-block">Cập nhật</span>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var RoleCheck = @(User.IsInRole("Giám Đốc") || User.IsInRole("QTV") ? "true" : "false");
            $('#tableMedication').DataTable({
                "ajax": {
                    "url": "@Url.Action("GetData", "Medications")",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "Name",
                    },
                    {
                        "data": "Medication_ID",
                    },
                    {
                        "data": "Unit",
                    },
                    {
                        "data": "Price",
                        "render": DataTable.render.number(',', '.')
                    },
                    {
                        "data": null,
                        "render": function(data, type, row) {
                                var button = "<button class='btn btn-primary btnHover edit ' onclick='getMedicationByID(" + data.ID + ")' data-id='"
                                    + data.ID + "'><i class='fas fa-user-edit'></i></button> <button id='text' class='btn btn-primary btnHover trash' onclick='deleteMedication(" + data.ID + ")'><i class='fas fa-trash'></i></button>";
                                return button;
                            },
                        "targets": 0,
                        "orderable": false
                    }
                ],
                "language": {
                    "emptyTable": "No data available, please click on <b>Tạo Thuốc</b> button",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ loại thuốc",
                    "search": "Tìm kiếm:",
                },
                "columnDefs": [
                    {
                        "targets": [4], //four column
                        "visible": RoleCheck
                    }
                ]
            })
        })
        createMedication()
        updateMedication()
        /*Create Medication*/
        function createMedication() {
            $('#form-createMedication').submit(function (e) {
                var dataMedication = $('#form-createMedication').serialize();
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var model = {
                    validata: dataMedication,
                }
                var isvalidCreate = $("#form-createMedication").valid();
                if (isvalidCreate) {
                    $.ajax({
                    url: "@Url.Action("Create", "Medications")",
                    type: "POST",
                    data: model.validata + "&__RequestVerificationToken=" + token,
                    success: (res) => {
                        if (res.success) {
                            resetInputCreate();
                            $('#createMedicationModal').modal('hide');
                            $(document.body).removeClass('modal-open').attr("style", "none");
                            $('.modal-backdrop').remove();
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Bạn đã tạo thành công',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            $('#tableMedication').DataTable().ajax.reload();
                        } else {
                            Toastify({
                                text: res.responseText,
                                className: "info",
                                duration: 1500,
                                style: {
                                    background: "linear-gradient(to right, #00b09b, #96c93d)",
                                }
                            }).showToast();
                        }
                    }
                })
                }
            e.preventDefault();
            })
        }

        /*get ID Update*/
        function getMedicationByID(id) {
            $.ajax({
                url: '@Url.Action("Edit", "Medications")',
                type: 'GET',
                data: { id: id },
                success: function (res) {
                    if (res.data != null) {
                        $('#UpdateMedicationName').val(res.data.Name);
                        $('#UpdateMedicationID').val(res.data.ID);
                        $('#UpdateMedicationCategory_ID ~ .choices__list--single > .choices__item--selectable').text(res.data.Medication_Name);
                        $('#UpdateMedicationCategory_ID option').attr("value", res.data.Medication_ID);
                        $('#UpdateMedicationPrice').val(res.data.Price);
                        $('#UpdateMedicationUnit ~ .choices__list--single > .choices__item--selectable').text(res.data.Unit);
                        $('#UpdateMedicationUnit option').attr("value", res.data.Unit);
                    }
                }
            })
            $('#Updatemedication').modal('show')
        }

        /*update*/
        function updateMedication() {
            $('#form-updateMedication').submit(function (e) {
                var dataMedication = $('#form-updateMedication').serialize();
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var model = {
                    validata: dataMedication,
                }
                var isvalidUpdate = $("#form-updateMedication").valid();
                if (isvalidUpdate) {
                    $.ajax({
                    url: "@Url.Action("Edit", "Medications")",
                    type: "POST",
                    data: model.validata + "&__RequestVerificationToken=" + token,
                    success: (res) => {
                        if (res.success) {
                            $('#Updatemedication').modal('hide');
                            $(document.body).removeClass('modal-open').attr("style", "none");
                            $('.modal-backdrop').remove();
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Bạn đã cập nhật thành công',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            $('#tableMedication').DataTable().ajax.reload();
                        } else {
                            Toastify({
                                text: res.responseText,
                                className: "info",
                                duration: 3000,
                                style: {
                                    background: "linear-gradient(to right, #00b09b, #96c93d)",
                                }
                            }).showToast();
                        }
                    }
                })
                }
                e.preventDefault();
            })
        }

        /*Get & Post Delete Medication*/
        function deleteMedication(id) {
            $.ajax({
                url: '@Url.Action("Delete", "Medications")',
                type: 'GET',
                data: { id: id },
                success: function (res) {
                    if (res.data != null) {
                        Swal.fire({
                            title: 'Bạn muốn xóa thuốc này?',
                            html:
                                '<b>Tên Thuốc:</b> <span>' + res.data.Name +'</span> <br/>' +
                                '<b>Tên Hoạt Chất:</b> <span>' + res.data.Medication_Name + '</span> <br/>' +
                                '<b>Đơn vị:</b> <span>' + res.data.Unit + '</span> <br/>' +
                                '<b>Giá:</b> <span>' + res.data.Price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "<b> VNĐ</b>" + '</span>',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#777',
                            confirmButtonText: 'Xác nhận',
                            cancelButtonText: 'Hủy'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                var form = $('#__AjaxAntiForgeryForm');
                                var token = $('input[name="__RequestVerificationToken"]', form).val();
                                $.ajax({
                                    url: '@Url.Action("Delete", "Medications")',
                                    type: 'POST',
                                    data: "ID=" + res.data.ID + "&__RequestVerificationToken=" + token,
                                    success: function (res) {
                                        if (res.success) {
                                            Swal.fire({
                                                position: 'center',
                                                icon: 'success',
                                                title: 'Xóa thành công',
                                                showConfirmButton: false,
                                                timer: 1500
                                            })
                                            $("#tableMedication").DataTable().ajax.reload();
                                        }
                                        else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Thất Bại',
                                                text: res.responseText,
                                            })
                                        }
                                    }
                                });
                            }
                        })
                    }
                }
            })
        }

        /*Reset Input Create Form*/
        function resetInputCreate() {
            $('#form-createMedication').get(0).reset();
        }

        /*Validate Form Create Medication*/
        $(function () {
            $("#form-createMedication").validate({
                rules: {
                    Name: {
                        required: true,
                        normalizer: function (value) {
                            return $.trim(value);
                        }
                    },
                    Price: {
                        required: true,
                        normalizer: function (value) {
                            return $.trim(value);
                        },
                        number: true
                    }
                },
                messages: {
                    Name: {
                        required: "Vui lòng không để trống hoặc nhập ký tự khoảng trắng",
                    },
                    Price: {
                        required: "Vui lòng không để trống hoặc nhập ký tự khoảng trắng",
                        number: "Vui lòng nhập đúng định dạng"
                    },
                    MedicationCategory_ID: {
                        required: "Vui lòng chọn Hoạt Chất"
                    },
                    Unit: {
                        required: "Vui lòng chọn Đơn vị",
                    }
                },
                errorClass: 'invalidLB',
                validClass: 'validLB',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".position-relative").addClass('mb-25')
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".position-relative").removeClass('mb-25')
                }
            });
        });

        /*Validate Create Dropdown*/
        $('#UnitCreateMedication').on("change", function (e) {
            if ($('#UnitCreateMedication').find(":selected").val() !== '') {
                $('#UnitCreateMedication ~ #UnitCreateMedication-error').text("");
            } else {
                $('#UnitCreateMedication ~ #UnitCreateMedication-error').text("Vui lòng chọn Đơn vị");
            }
        })

        $('#MedicationCategory_ID').on("change", function (e) {
            if ($('#MedicationCategory_ID').find(":selected").val() !== '') {
                $('#MedicationCategory_ID ~ #MedicationCategory_ID-error').text("");
            } else {
                $('#MedicationCategory_ID ~ #MedicationCategory_ID-error').text("Vui lòng chọn Hoạt Chất");
            }
        })


        /*Validate Form Update Medication*/
        $(function () {
            $("#form-updateMedication").validate({
                rules: {
                    Name: {
                        required: true,
                        normalizer: function (value) {
                            return $.trim(value);
                        }
                    },
                    Price: {
                        required: true,
                        normalizer: function (value) {
                            return $.trim(value);
                        },
                        number: true
                    }
                },
                messages: {
                    Name: {
                        required: "Vui lòng không để trống hoặc nhập ký tự khoảng trắng",
                    },
                    Price: {
                        required: "Vui lòng không để trống hoặc nhập ký tự khoảng trắng",
                        number: "Vui lòng nhập đúng định dạng"
                    }
                },
                errorClass: 'invalidLB',
                validClass: 'validLB',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".position-relative").addClass('mb-25')
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".position-relative").removeClass('mb-25')
                }
            });
        });
    </script>
}