@model ElectronicMedicalRecords.Models.MultiplesModel

<style>
    .name-Medication .choices {
        width: 100%
    }

        .name-Medication .choices[data-type*=select-one]:after {
            margin-top: -6px;
        }

    .name-Medication .choices__input--cloned {
        min-width: 100% !important;
    }

    .name-Medication .choices__inner {
        border: unset;
        padding: 0;
        width: 100%;
    }

    hr {
        color: #435ebe
    }

    .patient-taginpust .bootstrap-tagsinput {
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #607080;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #dce7f1;
        -webkit-appearance: none;
        -moz-appearance: none;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        box-shadow: unset
    }

        .patient-taginpust .bootstrap-tagsinput .label-info {
            background-color: #435ebe;
            border-radius: 4px;
            padding: 4px
        }

    .table-bordered tr:first-child {
        background-color: #435ebe;
        color: #fff;
        padding: 5px 0;
        text-align: center
    }

    .table-bordered tr:nth-child(2) td {
        border-width: 1px;
    }

    .table-bordered td {
        border-width: 1px
    }

    .pd-0px {
        padding: 0 1rem;
    }

    .navbar-nav {
        display: none
    }
    .choices[data-type*=select-one].is-open:after{
        margin-top: -10px;
    }
    a{
        cursor:pointer
    }
</style>
<header class="mb-3">
    <a href="#" class="burger-btn d-block d-xl-none">
        <i class="bi bi-justify fs-3"></i>
    </a>
</header>
@using (Html.BeginForm("CreateTest", "MultipleModels", FormMethod.Post, new { id = "createTest"}))
{
    @Html.AntiForgeryToken()
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="home-tab" data-bs-toggle="tab" href="#home"
                           role="tab" aria-controls="home" aria-selected="true">Hồ Sơ</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="home-tab" data-bs-toggle="tab" href="#LamSang"
                           role="tab" aria-controls="home" aria-selected="true">Lâm Sàng</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#profile"
                           role="tab" aria-controls="profile" aria-selected="false">Công Thức Máu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#SinhHoaMau"
                           role="tab" aria-controls="profile" aria-selected="false">Sinh Hóa Máu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#DongMau"
                           role="tab" aria-controls="profile" aria-selected="false">Đông Máu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#NhomMau"
                           role="tab" aria-controls="profile" aria-selected="false">Nhóm Máu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#urine"
                           role="tab" aria-controls="profile" aria-selected="false">Nước Tiểu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#immune"
                           role="tab" aria-controls="profile" aria-selected="false">Miễn Dịch</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#amniocente"
                           role="tab" aria-controls="profile" aria-selected="false">Dịch Chọc Dò</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#visinh"
                           role="tab" aria-controls="profile" aria-selected="false">Vi Sinh</a>
                    </li>
                </ul>
                <div class="ms-4 col-12 d-flex justify-content-start pt-4">
                    <button type="submit"
                            class="btn btn-primary me-1 mb-1">
                        Tạo Hồ Sơ
                    </button>
                    <div class="btn-group dropend me-1 mb-1">
                        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            In
                        </button>
                        <div class="dropdown-menu" style="margin: 0px;">
                            <h6 class="dropdown-header">Chọn Mục In</h6>
                            <a class="dropdown-item" id="PrintExamInFo">In Thông Tin Khám Bệnh</a>
                            <a class="dropdown-item" id="PrintAllTestSubclinical">In Phiếu Chỉ Định Xét Nghiệm</a>
                            <a class="dropdown-item" id="PrintToTal" target="_blank" href="#">In Hồ Sơ, Kết Quả Xét Nghiệm</a>
                            <a class="dropdown-item" id="PrintPrescription" target="_blank" href="#">In Toa Thuốc</a>
                        </div>
                    </div>
                    <button type="reset"
                            class="btn btn-light-secondary me-1 mb-1">
                        Reset
                    </button>
                </div>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel"
                         aria-labelledby="home-tab">
                        <p class='my-2'>
                            <section id="multiple-column-form">
                                <div class="row match-height">
                                    <div class="col-12">
                                        <div class="card">
                                            @{
                                                Html.RenderAction("CreateOldPatient", "Patients", new { id = Model.Patient.ID });
                                                Html.RenderAction("CreateOldPatient", "InformationExaminations", new { id = Model.InformationExamination.ID });
                                                Html.RenderAction("CreateOldPatient", "Prescription_Detail");
                                            }
                                        </div>
                                    </div>
                                </div>
                            </section>
                        </p>
                    </div>
                    <div class="tab-pane fade" id="LamSang" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "Clinicals");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="profile" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "CTMaus");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="SinhHoaMau" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "SinhHoaMaus");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="DongMau" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "DongMaus");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="NhomMau" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "NhomMaus");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="urine" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "Urines");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="immune" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "Immunes");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="amniocente" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "Amniocentes");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="visinh" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("CreateOldPatient", "ViSinhs");
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script>
        var k = 1;
        var count = [0, 0, 0, 0, 0, 0, 0, 0];
        var arrTests = [];
        var arrSinhHoaMau = [];
        var arrDongMau = [];
        var arrNhomMau = [];
        var arrUrine = [];
        var arrImmune = [];
        var arrAmniocente = [];
        var arrViSinh = [];
        /*Load CD Sinh hoa Mau*/
        function loadDetailTestsSHM() {
            $('#tableNewSinhHoaMau').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadDetailSHM", "MultipleModels")",
                    "type": "POST",
                    "data": function (d) {
                        d.arr = arrSinhHoaMau
                    }
                },
                "columns": [
                    {
                        "data": "ChiDinh",
                        "name": "Chỉ Định",
                        "render": (data, type, row) => {
                            var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='SinhHoaMau.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 1 + ',' + '"SHM-"' +")'>"
                            return checkbox;
                        },
                    },
                    {
                        "data": "NameTest",
                        "name": "Tên Xét Nghiệm",
                        "render": (data, type, row) => {
                            var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                            return label;
                        }
                    },
                    {
                        "data": "CSBT",
                        "name": "Chỉ Số Bình Thường"
                    },
                ],
                "language": {
                    "emptyTable": "No data available",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                    "search": "Tìm kiếm:",
                },
            })
        }
        /*Load CD Dich Choc Do*/
        function loadDetailAmniocentes() {
            $('#tableNewAmniocentes').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadDetailAmniocente", "MultipleModels")",
                    "type": "POST",
                    "data": function (d) {
                        d.arr = arrAmniocente
                    }
                },
                "columns": [
                    {
                        "data": "ChiDinh",
                        "name": "Chỉ Định",
                        "render": (data, type, row) => {
                            var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='Amniocente.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 6 + ',' + '"Amniocente-"' +")'>"
                            return checkbox;
                        },
                    },
                    {
                        "data": "NameTest",
                        "name": "Tên Xét Nghiệm",
                        "render": (data, type, row) => {
                            var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                            return label;
                        }
                    },
                    {
                        "data": "CSBT",
                        "name": "Chỉ Số Bình Thường"
                    },
                ],
                "language": {
                    "emptyTable": "No data available",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                    "search": "Tìm kiếm:",
                },
            })
        }
        /*Load CD Mien Dich*/
        function loadDetailTestsImmune() {
            $('#tableNewImmunes').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadDetailImmune", "MultipleModels")",
                    "type": "POST",
                    "data": function (d) {
                        d.arr = arrImmune
                    }
                },
                "columns": [
                    {
                        "data": "ChiDinh",
                        "name": "Chỉ Định",
                        "render": (data, type, row) => {
                            var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='Immune.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 5 + ',' + '"Immune-"' +")'>"
                            return checkbox;
                        },
                    },
                    {
                        "data": "NameTest",
                        "name": "Tên Xét Nghiệm",
                        "render": (data, type, row) => {
                            var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                            return label;
                        }
                    },
                    {
                        "data": "CSBT",
                        "name": "Chỉ Số Bình Thường"
                    },
                ],
                "language": {
                    "emptyTable": "No data available",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                    "search": "Tìm kiếm:",
                },
            })
        }
        /*Load CD Urines*/
        function loadDetailUrines() {
            $('#tableNewUrines').DataTable({
                "ajax": {
                    "url": "@Url.Action("LoadDetailUrines", "MultipleModels")",
                    "type": "POST",
                    "data": function (d) {
                        d.arr = arrUrine
                    }
                },
                "columns": [
                    {
                        "data": "ChiDinh",
                        "name": "Chỉ Định",
                        "render": (data, type, row) => {
                            var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='Urine.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 4 + ',' + '"Urine-"' +")'>"
                            return checkbox;
                        },
                    },
                    {
                        "data": "Name",
                        "name": "Tên Xét Nghiệm",
                        "render": (data, type, row) => {
                            var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.Name + "</label>"
                            return label;
                        }
                    },
                    {
                        "data": "CSBT",
                        "name": "Chỉ Số Bình Thường"
                    },
                ],
                "language": {
                    "emptyTable": "No data available",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                    "search": "Tìm kiếm:",
                },
            })
        }
        /*Load Detail Test*/
        function loadDetailTests() {
            $('#tableNewBloods').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadDetailBloods", "MultipleModels")",
                        "type": "POST",
                        "data": function (d) {
                            d.arr = arrTests
                        }
                    },
                    "columns": [
                        {
                            "data": "ChiDinh",
                            "name": "Chỉ Định",
                            "render": (data, type, row) => {
                                var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='CTMau.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 0 + ',' + '"CTMau-"' +")'>"
                                return checkbox;
                            },
                        },
                        {
                            "data": "NameTest",
                            "name": "Tên Xét Nghiệm",
                            "render": (data, type, row) => {
                                var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                                return label;
                            }
                        },
                        {
                            "data": "CSBT",
                            "name": "Chỉ Số Bình Thường"
                        },
                        {
                            "data": "Unit",
                            "name": "Đơn Vị"
                        },
                        {
                            "data": "MayXN",
                            "name": "Máy XN"
                        }
                    ],
                    "language": {
                        "emptyTable": "No data available",
                        "oPaginate": {
                            sNext: '<i class="fa fa-chevron-right"></i>',
                            sPrevious: '<i class="fa fa-chevron-left"></i>',
                        },
                        "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                        "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                        "search": "Tìm kiếm:",
                    },
                })
        }
        /*Load Detail Test DM*/
        function loadDetailTestsDM() {
            $('#tableNewDM').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadDetailDM", "MultipleModels")",
                        "type": "POST",
                        "data": function (d) {
                            d.arr = arrDongMau
                        }
                    },
                    "columns": [
                        {
                            "data": "ChiDinh",
                            "name": "Chỉ Định",
                            "render": (data, type, row) => {
                                var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='DongMau.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 2 + ',' + '"DongMau-"' +")'>"
                                return checkbox;
                            },
                        },
                        {
                            "data": "NameTest",
                            "name": "Tên Xét Nghiệm",
                            "render": (data, type, row) => {
                                var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                                return label;
                            }
                        },
                        {
                            "data": "CSBT",
                            "name": "Chỉ Số Bình Thường"
                        },
                        {
                            "data": "Unit",
                            "name": "Đơn Vị"
                        },
                    ],
                    "language": {
                        "emptyTable": "No data available",
                        "oPaginate": {
                            sNext: '<i class="fa fa-chevron-right"></i>',
                            sPrevious: '<i class="fa fa-chevron-left"></i>',
                        },
                        "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                        "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                        "search": "Tìm kiếm:",
                    },
                })
        }
        /*Load Detail Test Nhóm Máu*/
        function loadDetailTestsNM() {
            $('#tableNewNM').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadDetailNM", "MultipleModels")",
                        "type": "POST",
                        "data": function (d) {
                            d.arr = arrNhomMau
                        }
                    },
                    "columns": [
                        {
                            "data": "ChiDinh",
                            "name": "Chỉ Định",
                            "render": (data, type, row) => {
                                var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='NhomMau.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 3 + ',' + '"NhomMau-"' +")'>"
                                return checkbox;
                            },
                        },
                        {
                            "data": "NameTest",
                            "name": "Tên Xét Nghiệm",
                            "render": (data, type, row) => {
                                var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                                return label;
                            }
                        }
                    ],
                    "language": {
                        "emptyTable": "No data available",
                        "oPaginate": {
                            sNext: '<i class="fa fa-chevron-right"></i>',
                            sPrevious: '<i class="fa fa-chevron-left"></i>',
                        },
                        "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                        "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                        "search": "Tìm kiếm:",
                    },
                })
        }
        /*Load Detail Test ViSinh*/
        function loadDetailTestsViSinh() {
            $('#tableNewViSinhs').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadDetailVS", "MultipleModels")",
                        "type": "POST",
                        "data": function (d) {
                            d.arr = arrViSinh
                        }
                    },
                    "columns": [
                        {
                            "data": "ChiDinh",
                            "name": "Chỉ Định",
                            "render": (data, type, row) => {
                                var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='ViSinh.ChiDinh' onchange='updateNewCountTests(" + row.ID + ',' + 7 + ',' + '"ViSinh-"' +")'>"
                                return checkbox;
                            },
                        },
                        {
                            "data": "NameTest",
                            "name": "Tên Xét Nghiệm",
                            "render": (data, type, row) => {
                                var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                                return label;
                            }
                        }
                    ],
                    "language": {
                        "emptyTable": "No data available",
                        "oPaginate": {
                            sNext: '<i class="fa fa-chevron-right"></i>',
                            sPrevious: '<i class="fa fa-chevron-left"></i>',
                        },
                        "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                        "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                        "search": "Tìm kiếm:",
                    },
                })
        }

        var tableNewCD = $('*.tableNewChiDinh');
        var destroyTable = $('*#destroytable');
        tableNewCD.each((index, table) => {
            destroyTable[index].addEventListener('click', (e) => {
                var tableID = table.getAttribute("id")
                var tableCD = $('#' + tableID).DataTable();
                tableCD.destroy();
            })
        })

        function updateNewCountTests(id, numTable, row) {
            switch (numTable) {
                case 0:
                    var existTests = arrTests.indexOf("" + id);
                    arrTests.splice(existTests, 1);
                    break;
                case 1:
                    var existSHM = arrSinhHoaMau.indexOf("" + id);
                    arrSinhHoaMau.splice(existSHM, 1);
                    break;
                case 2:
                    var existDM = arrDongMau.indexOf("" + id);
                    arrDongMau.splice(existDM, 1);
                    break;
                case 3:
                    var existNM = arrNhomMau.indexOf("" + id);
                    arrNhomMau.splice(existNM, 1);
                    break;
                case 4:
                    var existUrine = arrUrine.indexOf("" + id);
                    arrUrine.splice(existUrine, 1);
                    break;
                case 5:
                    var existImmune = arrImmune.indexOf("" + id);
                    arrImmune.splice(existImmune, 1);
                    break;
                case 6:
                    var existAmniocente = arrAmniocente.indexOf("" + id);
                    arrAmniocente.splice(existAmniocente, 1);
                    break;
                case 7:
                    var existViSinh = arrViSinh.indexOf("" + id);
                    arrViSinh.splice(existViSinh, 1);
                    break;
            }
            count[numTable]--;
            CountTests[numTable].innerHTML = count[numTable];
            var GetTable = tableNewCD[numTable].getAttribute("id");
            console.log($("#" + row + id))
            console.log(GetTable)
            $("#" + row + id).prop("value", false);
            $("#" + row + id).prop("checked", false);
            $('#' + GetTable).DataTable().ajax.reload();
        }
        var formatCss = document.querySelector('.choices__list--single');
        formatCss.classList.add('form-control');
        formatCss.style.paddingLeft = '12px';

        var select = document.querySelector('#NameMedication');
        select.addEventListener('change', (e) => {
            var id = parseInt(e.target.value);
            $.ajax({
                type: "POST",
                url: "@Url.Action("FindMedication", "Medications")",
                data: { id: id},
                success: (res) => {
                    document.querySelector('#DVT').innerHTML = res.data.Unit;
                    document.querySelector('#IDMedication').setAttribute("value", res.data.ID);
                }
            })
        })

        function insRowMedication() {
            var NameMedication = $('#NameMedication').text();
            var UnitMedication = $('#UnitMedication').val();
            var NoteMedication = $('#NoteMedication').val();
            var IdMedication = $('#IDMedication').val();
            var medication = document.getElementById('TableMedication');
            var row = medication.insertRow(k);
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);
            cell0.innerHTML = "<input type='number' name='Prescription_Details" + '[' + (k - 1) + ']' + ".Medication_ID' value='" + IdMedication +"' hidden /> <input style='border:none;pointer-events: none;' type='text' value='"+ NameMedication +"' readonly/>";
            cell1.innerHTML = "<input style='border:none;pointer-events: none;' type='number' name='Prescription_Details" + '[' + (k - 1) + ']' +".NumMedication' value='" + UnitMedication + "' readonly/>";
            cell2.innerHTML = "<input style='border:none;pointer-events: none;' type='text' name='Prescription_Details" + '[' + (k - 1) + ']' +".Note' value='" + NoteMedication + "' readonly/>";
            cell3.innerHTML = "<button class='btn btn-primary' id='Medication-"+ k +"' type='button' onClick='deleteRow(" + k + ")'>Delete</button>";
            k++;
        }

        function deleteRow(btn) {
            var index = $("#Medication-" + btn);
            index.parent().parent().remove();
            k--;
        }
        var listTable = $('*.tableLoad');
        listTable.each((index, table) => {
            $('#' + table.id).DataTable({
                "pageLength": 50,
                "language": {
                    "emptyTable": "No data available",
                    "oPaginate": {
                        sNext: '<i class="fa fa-chevron-right"></i>',
                        sPrevious: '<i class="fa fa-chevron-left"></i>',
                    },
                    "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                    "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                    "search": "Tìm kiếm:",
                },
            });
        })

        var checkAllTable = $('*#checkAll');
        checkAllTable.each((index1, table) => {
            table.addEventListener('click', function (event) {
                var list = $('#' + listTable[index1].id + ' tbody td *input[type="checkbox"]');
                if (event.target.checked == true) {
                    count[index1] = 0;
                    switch (index1) {
                        case 0:
                            arrTests = [];
                            break;
                        case 1:
                            arrSinhHoaMau = [];
                            break;
                        case 2:
                            arrDongMau = [];
                            break;
                        case 3:
                            arrNhomMau = [];
                            break;
                        case 4:
                            arrUrine = [];
                            break;
                        case 5:
                            arrImmune = [];
                            break;
                        case 6:
                            arrAmniocente = [];
                            break;
                        case 7:
                            arrViSinh = [];
                            break;
                    }
                    list.each((index, value) => {
                        var id = value.getAttribute("data-id");
                        updateCountTests(id, event, value, index1)
                        value.checked = true;
                    })
                } else {
                    count[index1] = list.length;
                    list.each((index, value) => {
                        var id = value.getAttribute("data-id");
                        updateCountTests(id, event, value, index1)
                        value.checked = false;
                    })
                }
            })
        })

        checkAllTable.each((index1, table) => {
            var list = $('#' + listTable[index1].id + ' tbody td *input[type="checkbox"]');
            list.each((index, value) => {
                value.addEventListener('click', (e) => {
                    if (e.target.checked) {
                        var id = value.getAttribute("data-id");
                        updateCountTests(id, event, value, index1)
                        value.checked = true;
                    }
                    else {
                        var id = value.getAttribute("data-id");
                        updateCountTests(id, event, value, index1)
                        value.checked = false;
                    }
                })
            })
        })
        var CountTests = $('*.countTests');
        var DetailTests = $('*#DetailTestCount');
        function updateCountTests(id, e, value, indextable) {
            if (e.target.checked == true) {
            value.setAttribute("value", true);
            value.setAttribute("checked", true);
                count[indextable]++;
                switch (indextable) {
                    case 0:
                        arrTests.push(id);
                        break;
                    case 1:
                        arrSinhHoaMau.push(id);
                        break;
                    case 2:
                        arrDongMau.push(id);
                        break;
                    case 3:
                        arrNhomMau.push(id);
                        break;
                    case 4:
                        arrUrine.push(id);
                        break
                    case 5:
                        arrImmune.push(id);
                        break;
                    case 6:
                        arrAmniocente.push(id);
                        break;
                    case 7:
                        arrViSinh.push(id);
                        break;
                }
            } else {
                count[indextable]--;
                value.setAttribute("value", false);
                value.setAttribute("checked", false);
                switch (indextable) {
                    case 0:
                        const indexArrTests = arrTests.indexOf("" + id);
                        arrTests.splice(indexArrTests, 1);
                        break;
                    case 1:
                        const indexArrSHM = arrSinhHoaMau.indexOf("" + id);
                        arrSinhHoaMau.splice(indexArrSHM, 1);
                        break;
                    case 2:
                        const indexDM = arrDongMau.indexOf("" + id);
                        arrDongMau.splice(indexDM, 1);
                        break;
                    case 3:
                        const indexNM = arrNhomMau.indexOf("" + id);
                        arrNhomMau.splice(indexNM, 1);
                        break;
                    case 4:
                        const indexUrine = arrUrine.indexOf("" + id);
                        arrUrine.splice(indexUrine, 1);
                        break;
                    case 5:
                        const indexImmune = arrImmune.indexOf("" + id);
                        arrImmune.splice(indexImmune, 1);
                        break;
                    case 6:
                        const indexAmniocente = arrAmniocente.indexOf("" + id);
                        arrAmniocente.splice(indexAmniocente, 1);
                        break;
                    case 7:
                        const indexViSinh = arrViSinh.indexOf("" + id);
                        arrViSinh.splice(indexViSinh, 1);
                        break;
                }
            }
            if (count[indextable] > 0) {
                DetailTests[indextable].style.display = "block"
            } else {
                DetailTests[indextable].style.display = "none"
            }
            CountTests[indextable].innerHTML = count[indextable];
        }
        //$(".imgAdd").click(function () {
        //    var nameInput = $(this).closest(".row").find("input[type='file']").attr("name");
        //    $(this).closest(".row").find('.imgAdd').before('<div class="col-sm-4 imgUp"><div class="imagePreview"></div><label class="btn btn-primary">Upload<input type="file" class="uploadFile img" name="' + nameInput + '" value="Upload Photo" style="width:0px;height:0px;overflow:hidden;"></label><i class="fa fa-times del"></i></div>');
        //});
        //$(document).on("click", "i.del", function () {
        //    $(this).parent().remove();
        //});
        //$(function () {
        //    $(document).on("change", ".uploadFile", function () {
        //        var uploadFile = $(this);
        //        var files = !!this.files ? this.files : [];
        //        if (!files.length || !window.FileReader) return; // no file selected, or no FileReader support

        //        if (/^image/.test(files[0].type)) { // only image file
        //            var reader = new FileReader(); // instance of the FileReader
        //            reader.readAsDataURL(files[0]); // read the local file

        //            reader.onloadend = function () { // set image data as background of div
        //                //alert(uploadFile.closest(".upimage").find('.imagePreview').length);
        //                uploadFile.closest(".imgUp").find('.imagePreview').css("background-image", "url(" + this.result + ")");
        //            }
        //        }

        //    });
        //});
        const editors = document.querySelectorAll('.editor');
        editors.forEach(item => {
            ClassicEditor
                .create(item, {
                    toolbar: ['bold', 'italic', 'link', 'undo', 'redo', 'numberedList', 'bulletedList']
                })
                .catch(error => {
                    console.error("Toang" + error);
                });
        })
        /*Validate Form*/
        $('form').each((i, obj) => {
            $.validator.addMethod('checkPhoneNumber', function (value, element) {
                return this.optional(element) || /(84|0[3|5|7|8|9])+([0-9]{8})\b/.test(value);
            }, "Vui lòng nhập đúng định dạng");;
            $(function () {
                $(obj).validate({
                    rules: {
                        "Patient.Name": {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        "Patient.BirthDate": {
                            required: true,
                        },
                        "Patient.Address": {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        },
                        "Patient.Phone": {
                            required: true,
                            checkPhoneNumber: true
                        },
                        "Patient.InsuranceCode": {
                            required: true,
                            normalizer: function (value) {
                                return $.trim(value);
                            }
                        }
                    },
                    messages: {
                        "Patient.Name": {
                            required: "Trường này bắt buộc nhập"
                        },
                        "Patient.BirthDate": {
                            required: "Trường này bắt buộc nhập"
                        },
                        "Patient.Address": {
                            required: "Trường này bắt buộc nhập"
                        },
                        "Patient.Phone": {
                            required: "Trường này bắt buộc nhập",
                            matches: "Nhập đúng định dạng"
                        },
                        "Patient.InsuranceCode": {
                            required: "Trường này bắt buộc nhập",
                        }
                    },
                    errorClass: 'invalidForm',
                    validClass: 'validForm',
                });
            });
        })


        /*Print Examination Information*/
        $('#PrintExamInFo').click(function (e) {
            var dataExam = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataExam }),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintExaminationInfo", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print All Test Subclinical*/
        $('#PrintAllTestSubclinical').click(function (e) {
            var dataAllTest = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataAllTest }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintAllTestInfo", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test CTMau*/
        $('#PrintCTMaus').click(function (e) {
            var dataTestCTMaus = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestCTMaus }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestCTMaus", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Sinh Hóa Máu*/
        $('#PrintSinhHoaMaus').click(function (e) {
            var dataTestSHMs = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestSHMs }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestSinhHoaMaus", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Đông Máu*/
        $('#PrintDongMaus').click(function (e) {
            var dataTestDMaus = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestDMaus }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestDongMaus", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Nhóm Máu*/
        $('#PrintNhomMaus').click(function (e) {
            var dataTestNhomMaus = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestNhomMaus }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestNhomMaus", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Nước Tiểu*/
        $('#PrintNuocTieus').click(function (e) {
            var dataTestNuocTieus = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestNuocTieus }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestNuocTieus", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Miễn Dịch*/
        $('#PrintMienDichs').click(function (e) {
            var dataTestMienDichs = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestMienDichs }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestMienDichs", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Dịch Chọc Dò*/
        $('#PrintDichChocDos').click(function (e) {
            var dataTestDichChocDos = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestDichChocDos }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestDichChocDos", "MultipleModels")", "_blank");
                    }
                }
            })
        })

        /*Print Detail Test Vi Sinh*/
        $('#PrintViSinhs').click(function (e) {
            var dataTestViSinhs = $('#createTest').serialize();
            $.ajax({
                url: "@Url.Action("PrintExaminationInfoPost", "MultipleModels")",
                type: "POST",
                data: JSON.stringify({ multiplesModel: dataTestViSinhs }).replaceAll('"}', ''),
                success: function (res) {
                    if (res.success) {
                        window.open("@Url.Action("PrintTestViSinhs", "MultipleModels")", "_blank");
                    }
                }
            })
        })
    </script>
}