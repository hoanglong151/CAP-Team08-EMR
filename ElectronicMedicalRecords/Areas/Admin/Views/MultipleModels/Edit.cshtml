@model ElectronicMedicalRecords.Models.MultiplesModel
@{
    ViewBag.Title = "Edit";
}
<style>
    .name-Medication .choices {
        width: 100%
    }

        .name-Medication .choices[data-type*=select-one]:after {
            margin-top: -5px;
        }

    .name-Medication .choices__input--cloned {
        min-width: 100% !important;
    }

    .name-Medication .choices__inner {
        border: unset;
        padding: 0;
        width: 100%;
    }

    hr {
        color: #435ebe
    }

    .patient-taginpust .bootstrap-tagsinput {
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #607080;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #dce7f1;
        -webkit-appearance: none;
        -moz-appearance: none;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        box-shadow: unset
    }

        .patient-taginpust .bootstrap-tagsinput .label-info {
            background-color: #435ebe;
            border-radius: 4px;
            padding: 4px
        }

    .table-bordered tr:first-child {
        background-color: #435ebe;
        color: #fff;
        padding: 5px 0;
        text-align: center
    }

    .table-bordered tr:nth-child(2) td {
        border-width: 1px;
    }

    .table-bordered td {
        border-width: 1px
    }

    .pd-0px {
        padding: 0 1rem;
    }
</style>
<header class="mb-3">
    <a href="#" class="burger-btn d-block d-xl-none">
        <i class="bi bi-justify fs-3"></i>
    </a>
</header>
@using (Html.BeginForm("Edit", "MultipleModels", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="home-tab" data-bs-toggle="tab" href="#home"
                           role="tab" aria-controls="home" aria-selected="true">Hồ Sơ</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#profile"
                           role="tab" aria-controls="profile" aria-selected="false">Công Thức Máu</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="contact-tab" data-bs-toggle="tab" href="#contact"
                           role="tab" aria-controls="contact" aria-selected="false">Lâm Sàng</a>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel"
                         aria-labelledby="home-tab">
                        <p class='my-2'>
                            <section id="multiple-column-form">
                                <div class="row match-height">
                                    <div class="col-12">
                                        <div class="card">
                                            @{
                                                Html.RenderAction("Edit", "Patients", new { id = Model.Patient.ID});
                                                Html.RenderAction("Edit", "InformationExaminations", new { id = Model.InformationExamination.ID});
                                                //Html.RenderAction("Create", "Medications");
                                            }
                                        </div>
                                    </div>
                                    <div class="col-12 d-flex justify-content-end pt-4">
                                        <button type="submit"
                                                class="btn btn-primary me-1 mb-1">
                                            Cập Nhât Hồ Sơ
                                        </button>
                                        <button type="reset"
                                                class="btn btn-light-secondary me-1 mb-1">
                                            Reset
                                        </button>
                                    </div>
                                </div>
                            </section>
                        </p>
                    </div>
                    <div class="tab-pane fade" id="profile" role="tabpanel"
                         aria-labelledby="profile-tab">
                        <div class="page-heading">
                            <section class="section">
                                <div class="card">
                                    @{
                                        Html.RenderAction("Edit", "Detail_CTMau", new { id = Model.InformationExamination.ID});
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="contact" role="tabpanel"
                         aria-labelledby="contact-tab">
                        <p class="mt-2">
                            Duis ultrices purus non eros fermentum hendrerit. Aenean
                            ornare interdum
                            viverra. Sed ut odio velit. Aenean eu diam
                            dictum nibh rhoncus mattis quis ac risus. Vivamus eu congue ipsum.
                            Maecenas id
                            sollicitudin ex. Cras in ex vestibulum,
                            posuere orci at, sollicitudin purus. Morbi mollis elementum enim, in
                            cursus sem
                            placerat ut.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script type="text/javascript">
        var k = 1;
        var count = 0;
        var arrTests = [];
        /*Load Detail Test*/
        function loadDetailTests() {
            $('#tableNewBloods').DataTable({
                    "ajax": {
                        "url": "@Url.Action("LoadDetailBloods", "MultipleModels")",
                        "type": "POST",
                        "data": function (d) {
                            d.arr = arrTests
                        }
                    },
                    "columns": [
                        {
                            "data": "ChiDinh",
                            "name": "Chỉ Định",
                            "render": (data, type, row) => {
                                var checkbox = "<input type='checkbox' checked class='form-check-input form-check-primary' name='CTMau.ChiDinh' id='customColorCheckNew-" + row.ID + "' onchange='updateNewCountTests(" + row.ID + ")'>"
                                return checkbox;
                            },
                        },
                        {
                            "data": "NameTest",
                            "name": "Tên Xét Nghiệm",
                            "render": (data, type, row) => {
                                var label = "<label class='form-check-label' for='customColorCheckNew-" + row.ID + "'>" + row.NameTest + "</label>"
                                return label;
                            }
                        },
                        {
                            "data": "Result",
                            "name": "Kết Quả"
                        },
                        {
                            "data": "CSBT",
                            "name": "Chỉ Số Bình Thường"
                        },
                        {
                            "data": "Unit",
                            "name": "Đơn Vị"
                        },
                        {
                            "data": "MayXN",
                            "name": "Máy XN"
                        }
                    ],
                    "language": {
                        "emptyTable": "No data available",
                        "oPaginate": {
                            sNext: '<i class="fa fa-chevron-right"></i>',
                            sPrevious: '<i class="fa fa-chevron-left"></i>',
                        },
                        "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                        "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                        "search": "Tìm kiếm:",
                    },
                })
            }

        function destroytable() {
            var table = $('#tableNewBloods').DataTable();
            table.destroy();
        }
        function updateCountTests(id, e) {
            if (e.target.checked == true) {
                $('#customColorCheck-' + id).attr("value", true);
                $('#customColorCheck-' + id).attr("checked", true);
                count++;
                arrTests.push(id);
            } else {
                count--;
                $('#customColorCheck-' + id).attr("value", false);
                $('#customColorCheck-' + id).attr("checked", false);
                const index = arrTests.indexOf(id);
                arrTests.splice(index, 1);
            }
            if (count > 0) {
                $('#DetailTestCount').css("display", "block")
            } else {
                $('#DetailTestCount').css("display", "none")
            }
            document.querySelector('#countTests').innerHTML = count;
        }

        function checkAllMau() {
            var list = $('#tableCTMaus tbody td *input[type="checkbox"]');
            if (event.target.checked == true) {
                count = 0;
                list.each((index, value) => {
                    var id = value.getAttribute("data-id");
                    updateCountTests(id, event)
                    value.checked = true;
                })
            } else {
                count = list.length;
                list.each((index, value) => {
                    var id = value.getAttribute("data-id");
                    updateCountTests(id, event)
                    value.checked = false;
                })
            }
        }

        function updateNewCountTests(id) {
            var exist = arrTests.indexOf(id);
            arrTests.splice(exist, 1);
            count--;
            document.querySelector('#countTests').innerHTML = count;
            $('#customColorCheck-' + id).attr("value", false);
            $('#customColorCheck-' + id).attr("checked", false);
            $('#tableNewBloods').DataTable().ajax.reload();
        }

        @*var select = document.querySelector('#NameMedication');
        select.addEventListener('change', (e) => {
            var id = parseInt(e.target.value);
            $.ajax({
                type: "POST",
                url: "@Url.Action("FindMedication", "Medications")",
                data: { id: id},
                success: (res) => {
                    document.querySelector('#DVT').innerHTML = res.data
                }
            })
        })

        function insRowMedication() {
            var NameMedication = $('#NameMedication').text();
            var UnitMedication = $('#UnitMedication').val();
            var NoteMedication = $('#NoteMedication').val();
            var medication = document.getElementById('TableMedication');
            var row = medication.insertRow(k);
            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);
            cell0.innerHTML = NameMedication;
            cell1.innerHTML = UnitMedication;
            cell2.innerHTML = NoteMedication;
            cell3.innerHTML = "<button class='btn btn-primary' id='Medication-"+ k +"' type='button' onClick='deleteRow(" + k + ")'>Delete</button>";
            k++;
        }*@

        //function deleteRow(btn) {
        //    var index = $("#Medication-" + btn);
        //    index.parent().parent().remove();
        //    k--;
        //}

        $('#tableCTMaus').DataTable({
            "pageLength": 25,
            "language": {
                "emptyTable": "No data available",
                "oPaginate": {
                    sNext: '<i class="fa fa-chevron-right"></i>',
                    sPrevious: '<i class="fa fa-chevron-left"></i>',
                },
                "info": "Hiển thị _START_/_END_ trên tổng _TOTAL_",
                "lengthMenu": "Hiển thị _MENU_ danh mục thuốc",
                "search": "Tìm kiếm:",
            },
        });
    </script>
}